// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_code.proto

package com.haoyun.entity.proto;

public final class PublicCode {
  private PublicCode() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ErrCode}
   */
  public enum ErrCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Normal = 1;</code>
     */
    Normal(0, 1),
    /**
     * <code>IllegalClient = 2;</code>
     *
     * <pre>
     * 非法客户端
     * </pre>
     */
    IllegalClient(1, 2),
    ;

    /**
     * <code>Normal = 1;</code>
     */
    public static final int Normal_VALUE = 1;
    /**
     * <code>IllegalClient = 2;</code>
     *
     * <pre>
     * 非法客户端
     * </pre>
     */
    public static final int IllegalClient_VALUE = 2;


    @Override
    public final int getNumber() { return value; }

    public static ErrCode valueOf(int value) {
      switch (value) {
        case 1: return Normal;
        case 2: return IllegalClient;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ErrCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrCode>() {
            @Override
            public ErrCode findValueByNumber(int number) {
              return ErrCode.valueOf(number);
            }
          };

    @Override
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    @Override
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.haoyun.entity.proto.PublicCode.getDescriptor().getEnumTypes().get(0);
    }

    private static final ErrCode[] VALUES = values();

    public static ErrCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ErrCode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ErrCode)
  }

  /**
   * Protobuf enum {@code ErrType}
   */
  public enum ErrType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LoginErr = 1;</code>
     */
    LoginErr(0, 1),
    ;

    /**
     * <code>LoginErr = 1;</code>
     */
    public static final int LoginErr_VALUE = 1;


    @Override
    public final int getNumber() { return value; }

    public static ErrType valueOf(int value) {
      switch (value) {
        case 1: return LoginErr;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ErrType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrType>() {
            @Override
            public ErrType findValueByNumber(int number) {
              return ErrType.valueOf(number);
            }
          };

    @Override
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }

    @Override
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.haoyun.entity.proto.PublicCode.getDescriptor().getEnumTypes().get(1);
    }

    private static final ErrType[] VALUES = values();

    public static ErrType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ErrType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ErrType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021public_code.proto*(\n\007ErrCode\022\n\n\006Normal" +
      "\020\001\022\021\n\rIllegalClient\020\002*\027\n\007ErrType\022\014\n\010Logi" +
      "nErr\020\001B\031\n\027com.haoyun.entity.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          @Override
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
